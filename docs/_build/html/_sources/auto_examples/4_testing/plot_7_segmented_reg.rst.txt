
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\4_testing\plot_7_segmented_reg.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_4_testing_plot_7_segmented_reg.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_4_testing_plot_7_segmented_reg.py:


Segmented Diagnose (Regression)
========================================================

.. GENERATED FROM PYTHON SOURCE LINES 8-9

Experiment initialization and data preparation

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default

    from piml import Experiment
    from piml.models import XGB2Regressor

    exp = Experiment()
    exp.data_loader(data="BikeSharing", silent=True)
    exp.data_summary(feature_exclude=["yr", "mnth", "temp"], silent=True)
    exp.data_prepare(target="cnt", task_type="regression", silent=True)








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Train Model

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    exp.model_train(XGB2Regressor(), name="XGB2")








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Summary of all segments (top 10 with the worst performance)

.. GENERATED FROM PYTHON SOURCE LINES 23-27

.. code-block:: default

    result = exp.segmented_diagnose(model='XGB2', show='segment_table',
                                    segment_method='uniform', segment_bins=5, return_data=True)
    result.data.head(10)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <pandas.io.formats.style.Styler object at 0x00000203177A7EE0>


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Segment ID</th>
          <th>Feature</th>
          <th>Segment</th>
          <th>Size</th>
          <th>MSE</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>hr</td>
          <td>[0.6, 0.8)</td>
          <td>735</td>
          <td>0.018380</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1</td>
          <td>hr</td>
          <td>[0.2, 0.4)</td>
          <td>712</td>
          <td>0.014116</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2</td>
          <td>hum</td>
          <td>[0.0, 0.2)</td>
          <td>15</td>
          <td>0.013335</td>
        </tr>
        <tr>
          <th>3</th>
          <td>3</td>
          <td>hum</td>
          <td>[0.2, 0.4)</td>
          <td>441</td>
          <td>0.013161</td>
        </tr>
        <tr>
          <th>4</th>
          <td>4</td>
          <td>atemp</td>
          <td>[0.5909, 0.7878)</td>
          <td>1026</td>
          <td>0.012643</td>
        </tr>
        <tr>
          <th>5</th>
          <td>5</td>
          <td>season</td>
          <td>2.0</td>
          <td>912</td>
          <td>0.011245</td>
        </tr>
        <tr>
          <th>6</th>
          <td>6</td>
          <td>windspeed</td>
          <td>[0.7298, 0.9123]</td>
          <td>12</td>
          <td>0.011149</td>
        </tr>
        <tr>
          <th>7</th>
          <td>7</td>
          <td>workingday</td>
          <td>0.0</td>
          <td>1131</td>
          <td>0.010764</td>
        </tr>
        <tr>
          <th>8</th>
          <td>8</td>
          <td>windspeed</td>
          <td>[0.1825, 0.3649)</td>
          <td>1598</td>
          <td>0.010634</td>
        </tr>
        <tr>
          <th>9</th>
          <td>9</td>
          <td>season</td>
          <td>3.0</td>
          <td>874</td>
          <td>0.010363</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 28-29

Summary of all segments of a given feature (top 10 with the worst performance)

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default

    result = exp.segmented_diagnose(model="XGB2", show="segment_table",
                                    segment_method="uniform", segment_feature="hr", segment_bins=5, return_data=True)
    result.data





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <pandas.io.formats.style.Styler object at 0x00000203177B2CA0>


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Segment ID</th>
          <th>Feature</th>
          <th>Segment</th>
          <th>Size</th>
          <th>MSE</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>hr</td>
          <td>[0.6, 0.8)</td>
          <td>735</td>
          <td>0.018380</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1</td>
          <td>hr</td>
          <td>[0.2, 0.4)</td>
          <td>712</td>
          <td>0.014116</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2</td>
          <td>hr</td>
          <td>[0.4, 0.6)</td>
          <td>585</td>
          <td>0.007795</td>
        </tr>
        <tr>
          <th>3</th>
          <td>3</td>
          <td>hr</td>
          <td>[0.8, 1.0]</td>
          <td>732</td>
          <td>0.005194</td>
        </tr>
        <tr>
          <th>4</th>
          <td>4</td>
          <td>hr</td>
          <td>[0.0, 0.2)</td>
          <td>712</td>
          <td>0.001655</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 34-35

Residual analysis of the samples in that segment

.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: default

    exp.segmented_diagnose(model="XGB2", show="accuracy_residual", 
                           segment_method="uniform", segment_feature="hr", segment_bins=5, segment_id=0,
                           show_feature="atemp", figsize=(5, 4))




.. image-sg:: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_001.png
   :alt: Residual Plot
   :srcset: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 40-41

Weakspot analysis of the samples in that segment

.. GENERATED FROM PYTHON SOURCE LINES 41-45

.. code-block:: default

    exp.segmented_diagnose(model="XGB2", show="weakspot", 
                           segment_method="uniform", segment_feature="hr", segment_bins=5, segment_id=0,
                           slice_features=["atemp"], metric="MSE", figsize=(5, 4))




.. image-sg:: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_002.png
   :alt: Weak Regions
   :srcset: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 46-47

Distributional distance comparison between the specificed segment and the remaining (feature-by-feature)

.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: default

    res = exp.segmented_diagnose(model="XGB2", show="distribution_shift",
                                 segment_method="uniform", segment_feature="hr", segment_bins=5, segment_id=0,
                                 figsize=(5, 4), return_data=True)




.. image-sg:: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_003.png
   :alt: Data distance(In segment vs. out of segment)
   :srcset: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 52-53

Distributional distance comparison between the specificed segment and the remaining (density of one selected feature)

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: default

    res = exp.segmented_diagnose(model="XGB2", show="distribution_shift",
                                 segment_method="uniform", segment_feature="hr", segment_bins=5,
                                 segment_id=0, show_feature="hum", figsize=(5, 4), return_data=True)



.. image-sg:: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_004.png
   :alt: Distribution plot
   :srcset: /auto_examples/4_testing/images/sphx_glr_plot_7_segmented_reg_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  57.184 seconds)

**Estimated memory usage:**  27 MB


.. _sphx_glr_download_auto_examples_4_testing_plot_7_segmented_reg.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/selfexplainml/piml-toolbox/main?urlpath=lab/tree/./docs/_build/html/notebooks/auto_examples/4_testing/plot_7_segmented_reg.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_7_segmented_reg.py <plot_7_segmented_reg.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_7_segmented_reg.ipynb <plot_7_segmented_reg.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
