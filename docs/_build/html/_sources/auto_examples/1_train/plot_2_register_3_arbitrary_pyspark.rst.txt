
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\1_train\plot_2_register_3_arbitrary_pyspark.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_1_train_plot_2_register_3_arbitrary_pyspark.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_1_train_plot_2_register_3_arbitrary_pyspark.py:


Register PySpark Models
========================================================
Here we show how to write a wrapper for PySpark models.

.. GENERATED FROM PYTHON SOURCE LINES 9-10

For demonstration, we first fit a Decision tree model using SimuCredit data.

.. GENERATED FROM PYTHON SOURCE LINES 10-32

.. code-block:: Python

    import os
    os.environ["PYSPARK_PYTHON"] = "python"

    import pandas as pd
    from pyspark.ml import Pipeline
    from pyspark.sql import SparkSession
    from pyspark.ml.classification import GBTClassifier
    from pyspark.ml.feature import VectorAssembler

    data = pd.read_csv('https://github.com/SelfExplainML/PiML-Toolbox/blob/main/datasets/SimuCredit.csv?raw=true')
    feature_names = ['Mortgage', 'Balance', 'Amount Past Due', 'Credit Inquiry', 'Open Trade', 'Delinquency', 'Utilization']
    target_name = 'Approved'

    spark = SparkSession.builder.appName("SimuCredit-Spark-Demo").getOrCreate()
    spark_df = spark.createDataFrame(data)
    train_data, test_data = spark_df.randomSplit([0.8, 0.2], seed=2024)

    feature_assembler = VectorAssembler(inputCols=feature_names, outputCol="features")
    gbt = GBTClassifier(labelCol=target_name, seed=2024)
    pipeline = Pipeline(stages=[feature_assembler, gbt])
    model = pipeline.fit(train_data)








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Next, we define the wrapper functions of predict and predict_proba.

.. GENERATED FROM PYTHON SOURCE LINES 34-48

.. code-block:: Python


    def predict_func(X):

        sdf = spark.createDataFrame(pd.DataFrame(X, columns=feature_names))
        pred = model.transform(sdf).select('prediction').toPandas().values.astype(float).ravel()
        return pred

    def predict_proba_func(X):
    
        sdf = spark.createDataFrame(pd.DataFrame(X, columns=feature_names))
        predictions = model.transform(sdf).select('probability').toPandas()
        proba = predictions.explode('probability').values.reshape((-1, 2)).astype(float)
        return proba








.. GENERATED FROM PYTHON SOURCE LINES 49-50

Register the fitted model into PiML (please make sure the datasets of different pipelines are the same)

.. GENERATED FROM PYTHON SOURCE LINES 50-63

.. code-block:: Python

    from piml import Experiment
    exp = Experiment(highcode_only=True)
    pipeline = exp.make_pipeline(predict_func=predict_func,
                                 predict_proba_func=predict_proba_func,
                                 task_type="classification",
                                 train_x=train_data.select(feature_names).toPandas().values,
                                 train_y=train_data.select(target_name).toPandas().values,
                                 test_x=test_data.select(feature_names).toPandas().values,
                                 test_y=test_data.select(target_name).toPandas().values,
                                 feature_names=feature_names,
                                 target_name=target_name)
    exp.register(pipeline, "Spark-GBT")








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Check model performance

.. GENERATED FROM PYTHON SOURCE LINES 65-67

.. code-block:: Python

    exp.model_diagnose(model="Spark-GBT", show="accuracy_table")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               ACC      AUC       F1 LogLoss   Brier
                                                
    Train   0.7046   0.7737   0.7253  0.5658  0.1923
    Test    0.6991   0.7552   0.7243  0.5846  0.1996
    Gap    -0.0055  -0.0185  -0.0010  0.0188  0.0073




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Run validataion tests

.. GENERATED FROM PYTHON SOURCE LINES 69-70

.. code-block:: Python

    exp.model_explain(model="Spark-GBT", show="pdp", uni_feature="Balance", sample_size=1000, figsize=(5, 4))



.. image-sg:: /auto_examples/1_train/images/sphx_glr_plot_2_register_3_arbitrary_pyspark_001.png
   :alt: Partial Dependence Plot
   :srcset: /auto_examples/1_train/images/sphx_glr_plot_2_register_3_arbitrary_pyspark_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (13 minutes 10.641 seconds)


.. _sphx_glr_download_auto_examples_1_train_plot_2_register_3_arbitrary_pyspark.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/selfexplainml/piml-toolbox/main?urlpath=lab/tree/./docs/_build/html/notebooks/auto_examples/1_train/plot_2_register_3_arbitrary_pyspark.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_2_register_3_arbitrary_pyspark.ipynb <plot_2_register_3_arbitrary_pyspark.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_2_register_3_arbitrary_pyspark.py <plot_2_register_3_arbitrary_pyspark.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
